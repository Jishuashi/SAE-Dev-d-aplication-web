{"ast":null,"code":"var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function stringToBytes(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n    // Convert a byte array to a string\n    bytesToString: function bytesToString(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function stringToBytes(str) {\n      for (var bytes = [], i = 0; i < str.length; i++) bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n    // Convert a byte array to a string\n    bytesToString: function bytesToString(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++) str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\nmodule.exports = charenc;","map":{"version":3,"names":["charenc","utf8","stringToBytes","str","bin","unescape","encodeURIComponent","bytesToString","bytes","decodeURIComponent","escape","i","length","push","charCodeAt","String","fromCharCode","join","module","exports"],"sources":["/root/sae3-01-dev-d-apli/node_modules/charenc/charenc.js"],"sourcesContent":["var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n"],"mappings":"AAAA,IAAIA,OAAO,GAAG;EACZ;EACAC,IAAI,EAAE;IACJ;IACAC,aAAa,EAAE,uBAASC,GAAG,EAAE;MAC3B,OAAOH,OAAO,CAACI,GAAG,CAACF,aAAa,CAACG,QAAQ,CAACC,kBAAkB,CAACH,GAAG,CAAC,CAAC,CAAC;IACrE,CAAC;IAED;IACAI,aAAa,EAAE,uBAASC,KAAK,EAAE;MAC7B,OAAOC,kBAAkB,CAACC,MAAM,CAACV,OAAO,CAACI,GAAG,CAACG,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;IACrE;EACF,CAAC;EAED;EACAJ,GAAG,EAAE;IACH;IACAF,aAAa,EAAE,uBAASC,GAAG,EAAE;MAC3B,KAAK,IAAIK,KAAK,GAAG,EAAE,EAAEG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,GAAG,CAACS,MAAM,EAAED,CAAC,EAAE,EAC7CH,KAAK,CAACK,IAAI,CAACV,GAAG,CAACW,UAAU,CAACH,CAAC,CAAC,GAAG,IAAI,CAAC;MACtC,OAAOH,KAAK;IACd,CAAC;IAED;IACAD,aAAa,EAAE,uBAASC,KAAK,EAAE;MAC7B,KAAK,IAAIL,GAAG,GAAG,EAAE,EAAEQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAC7CR,GAAG,CAACU,IAAI,CAACE,MAAM,CAACC,YAAY,CAACR,KAAK,CAACG,CAAC,CAAC,CAAC,CAAC;MACzC,OAAOR,GAAG,CAACc,IAAI,CAAC,EAAE,CAAC;IACrB;EACF;AACF,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGnB,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}