{"ast":null,"code":"import _defineProperty from\"/root/sae3-01-dev-d-apli/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/root/sae3-01-dev-d-apli/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/root/sae3-01-dev-d-apli/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'../../../../styles/moduleProba.css';import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ModuleProba(_ref){var logged=_ref.logged;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),result=_useState4[0],setResult=_useState4[1];var round=100000.0;var n=10;var _useState5=useState({sigma:'',moy:'',t:'',method:'rectangles'//default value\n}),_useState6=_slicedToArray(_useState5,2),formData=_useState6[0],setFormData=_useState6[1];function loiNormal(x){return 1/(formData.sigma*Math.sqrt(2*Math.PI))*Math.exp(-0.5*Math.pow((x-formData.moy)/formData.sigma,2));}function convertiProba(number){if(formData.t>formData.moy){return Math.round((number+0.5)*round)/round;}return Math.round((0.5-number)*round)/round;}var handleSubmit=function handleSubmit(event){event.preventDefault();setResult(\"\");if(formData.sigma<=0){setError(\"Erreur sigma dois être strictement supérieur à 0\");}else{setError(\"\");console.log(formData.method);/*\"Placement des points\" a et b\n            Ils seront l'interval à calculer, soit p(t<x<m) si t<m\n            sinon p(m<x<t)\n            */var a=0;var b=0;if(formData.t>formData.moy){a=formData.moy;b=Math.abs(formData.t);}else{a=Math.abs(formData.t);b=formData.moy;}var add=Math.round(1/n*10.0)/10.0;if(formData.method===\"rectangles\"){/*Commence en a+1\n                Parcourt des points de a+1 à b-1\n                Initialisation d'une letiable sommeCommun,\n                pour récupérer la somme des aires des rectangles\n                Pour ne pas modifier la constante a, on initialise une letiable k\n                 */var k=a+add;var sommeCommun=0;while(k<b){sommeCommun+=loiNormal(k);/*Arrondi k à un chiffre après la virgule :\n                    problème rencontré k = 0.1000002 */k=Math.round((k+add)*10.0)/10.0;}/*Multiplication de la somme des longueurs par la largeur\n                Différenciation des rectangles Droits:\n                par la première valeur interval, soit a\n                Différenciation des rectangles Gauches:\n                par la dernière valeur interval, soit b\n                */sommeCommun*=add;var rectDroit=sommeCommun+loiNormal(a)*add;var rectGauche=sommeCommun+loiNormal(b)*add;rectDroit=convertiProba(rectDroit);rectGauche=convertiProba(rectGauche);var median=(rectGauche+rectDroit)/2;median=Math.round(median*100000.0)/100000.0;setResult(\"rectangle gauche: \".concat(rectGauche,\", rectangle droit: \").concat(rectDroit,\", mediane: \").concat(median));}else if(formData.method===\"trapezes\"){/*point k en a\n                parcourt de tout les points entre a et b\n                sommeTrape représente la somme des aires des trapèzes,\n                soit la probabilité de p(a<=x<=b)\n                 */var _k=a;var sommeTrap=0;while(_k<b){/*Fait la somme des aires\n                    aire : (l1+l2)*h/2 -> aire d'un trapèze\n                    l1 = k; l2 = k+0.1; h = l'interval entre deux point soit 1/n\n                     */sommeTrap+=(loiNormal(_k)+loiNormal(_k+add))*add/2;_k=Math.round((_k+0.1)*10.0)/10.0;console.log(sommeTrap);}//converti la somme des aires des trapèzes pour donner la probabilité p(x<t)\nvar resT=convertiProba(sommeTrap);setResult(\"M\\xE9diane trap\\xE8zes: \".concat(resT));}else if(formData.method===\"simpson\"){var fa=loiNormal(a);//--> f(a)\nvar fb=loiNormal(b);//--> f(b)\nvar fab=4*loiNormal((a+b)/2);//-->4f((a+b)/2)\nvar _result=(fb+fab+fa)*(b-a)/6;//-->(b-a)/6 * [f(a)+4f((a+b)/2)+f(b)]\n_result=convertiProba(_result);setResult(\"M\\xE9diane simpson: \".concat(_result));}}};var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},name,value)));};var navigate=useNavigate();if(logged){return/*#__PURE__*/_jsxs(\"div\",{className:\"ModuleProba\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"titleProba\",children:\"Module de probabilit\\xE9\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"inputsProba\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"inputTextProba\",children:\"Entrez les valeurs: \"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"sigma\",children:\"Sigma: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"sigma\",name:\"sigma\",min:\"1\",step:\"any\",required:true,placeholder:\"sigma>0\",onChange:handleChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"moy\",children:\"Esperence: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"moy\",name:\"moy\",step:\"any\",required:true,onChange:handleChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"t\",children:\"T: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"t\",name:\"t\",step:\"any\",required:true,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"radioInputsProba\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"calcMethod\",children:\"M\\xE9thode de calcul:\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"rectangles\",children:\"rectangles\"}),/*#__PURE__*/_jsx(\"input\",{type:\"radio\",className:\"rectangles\",name:\"method\",value:\"rectangles\",defaultChecked:true,onChange:handleChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"trapezes\",children:\"trap\\xE8zes\"}),/*#__PURE__*/_jsx(\"input\",{type:\"radio\",className:\"trapezes\",name:\"method\",value:\"trapezes\",onChange:handleChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"simpson\",children:\"simpson\"}),/*#__PURE__*/_jsx(\"input\",{type:\"radio\",className:\"simpson\",name:\"method\",value:\"simpson\",onChange:handleChange})]}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",className:\"lunchButtonProba\",value:\"Lancer le calcul\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dialogBoxProba\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"errorProba\",children:error}),/*#__PURE__*/_jsx(\"p\",{className:\"calcResultProba\",children:result})]})]});}else{return navigate(\"/notAllowed\");}}export default ModuleProba;","map":{"version":3,"names":["React","useState","useNavigate","ModuleProba","logged","error","setError","result","setResult","round","n","sigma","moy","t","method","formData","setFormData","loiNormal","x","Math","sqrt","PI","exp","pow","convertiProba","number","handleSubmit","event","preventDefault","console","log","a","b","abs","add","k","sommeCommun","rectDroit","rectGauche","median","sommeTrap","resT","fa","fb","fab","handleChange","target","name","value","navigate"],"sources":["/root/sae3-01-dev-d-apli/src/pages/domains/modules/Maths/module_proba.js"],"sourcesContent":["import React, {useState} from 'react';\nimport '../../../../styles/moduleProba.css';\nimport {useNavigate} from \"react-router-dom\";\nfunction ModuleProba({logged}) {\n    const [error, setError] = useState(\"\")\n    const [result, setResult] = useState(``)\n\n    let round = 100000.0\n    const n = 10\n\n    const [formData, setFormData] = useState({\n        sigma: '',\n        moy: '',\n        t: '',\n        method: 'rectangles' //default value\n    });\n\n    function loiNormal(x) {\n        return (1 / (formData.sigma * Math.sqrt(2 * Math.PI))) * Math.exp(-0.5 * Math.pow((x - formData.moy) / formData.sigma, 2))\n    }\n\n    function convertiProba(number) {\n        if (formData.t > formData.moy) {\n            return Math.round((number + 0.5) * round) / round\n        }\n        return Math.round((0.5 - number) * round) / round\n    }\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setResult(``)\n\n        if (formData.sigma <= 0) {\n            setError(\"Erreur sigma dois être strictement supérieur à 0\")\n        } else {\n            setError(\"\")\n            console.log(formData.method);\n            /*\"Placement des points\" a et b\n            Ils seront l'interval à calculer, soit p(t<x<m) si t<m\n            sinon p(m<x<t)\n            */\n            let a = 0\n            let b = 0\n            if (formData.t > formData.moy) {\n                a = formData.moy\n                b = Math.abs(formData.t)\n            } else {\n                a = Math.abs(formData.t)\n                b = formData.moy\n            }\n\n            const add = Math.round((1 / n) * 10.0) / 10.0\n\n\n            if (formData.method === \"rectangles\") {\n                /*Commence en a+1\n                Parcourt des points de a+1 à b-1\n                Initialisation d'une letiable sommeCommun,\n                pour récupérer la somme des aires des rectangles\n                Pour ne pas modifier la constante a, on initialise une letiable k\n                 */\n                let k = a + add\n                let sommeCommun = 0\n                while (k < b) {\n                    sommeCommun += loiNormal(k)\n                    /*Arrondi k à un chiffre après la virgule :\n                    problème rencontré k = 0.1000002 */\n                    k = Math.round((k + add) * 10.0) / 10.0\n                }\n\n                /*Multiplication de la somme des longueurs par la largeur\n                Différenciation des rectangles Droits:\n                par la première valeur interval, soit a\n                Différenciation des rectangles Gauches:\n                par la dernière valeur interval, soit b\n                */\n\n                sommeCommun *= add\n                let rectDroit = sommeCommun + loiNormal(a) * add\n                let rectGauche = sommeCommun + loiNormal(b) * add\n                rectDroit = convertiProba(rectDroit)\n                rectGauche = convertiProba(rectGauche)\n                let median = (rectGauche + rectDroit) / 2\n                median = Math.round(median * 100000.0) / 100000.0\n                setResult(`rectangle gauche: ${rectGauche}, rectangle droit: ${rectDroit}, mediane: ${median}`)\n\n            } else if (formData.method === \"trapezes\") {\n                /*point k en a\n                parcourt de tout les points entre a et b\n                sommeTrape représente la somme des aires des trapèzes,\n                soit la probabilité de p(a<=x<=b)\n                 */\n                let k = a\n                let sommeTrap = 0\n                while (k < b) {\n                    /*Fait la somme des aires\n                    aire : (l1+l2)*h/2 -> aire d'un trapèze\n                    l1 = k; l2 = k+0.1; h = l'interval entre deux point soit 1/n\n                     */\n                    sommeTrap += (loiNormal(k) + loiNormal(k + add)) * add / 2\n                    k = Math.round((k + 0.1) * 10.0) / 10.0\n                    console.log(sommeTrap)\n                }\n                //converti la somme des aires des trapèzes pour donner la probabilité p(x<t)\n                let resT = convertiProba(sommeTrap)\n                setResult(`Médiane trapèzes: ${resT}`)\n\n            } else if (formData.method === \"simpson\") {\n                let fa = loiNormal(a) //--> f(a)\n                let fb = loiNormal(b) //--> f(b)\n                let fab = 4 * loiNormal((a + b) / 2)  //-->4f((a+b)/2)\n                let result = (fb + fab + fa) * (b - a) / 6 //-->(b-a)/6 * [f(a)+4f((a+b)/2)+f(b)]\n                result = convertiProba(result)\n                setResult(`Médiane simpson: ${result}`)\n            }\n        }\n    }\n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        setFormData({...formData, [name]: value});\n    }\n\n    const navigate = useNavigate();\n\n    if (logged) {\n        return (\n            <div className=\"ModuleProba\">\n                <h1 className={\"titleProba\"}>Module de probabilité</h1>\n                <form onSubmit={handleSubmit}>\n                    <div className={\"inputsProba\"}>\n                        <p className={\"inputTextProba\"}>Entrez les valeurs: </p>\n                        <label htmlFor={\"sigma\"}>Sigma: </label>\n                        <input type={\"number\"} className={\"sigma\"} name={\"sigma\"} min={\"1\"} step={\"any\"} required={true}\n                               placeholder={\"sigma>0\"} onChange={handleChange}/>\n                        <label htmlFor={\"moy\"}>Esperence: </label>\n                        <input type={\"number\"} className={\"moy\"} name={\"moy\"} step={\"any\"} required={true}\n                               onChange={handleChange}/>\n                        <label htmlFor={\"t\"}>T: </label>\n                        <input type={\"number\"} className={\"t\"} name={\"t\"} step={\"any\"} required={true}\n                               onChange={handleChange}/>\n                    </div>\n\n                    <div className={\"radioInputsProba\"}>\n                        <p className={\"calcMethod\"}>Méthode de calcul:</p>\n                        <label htmlFor=\"rectangles\">rectangles</label>\n                        <input type={\"radio\"} className={\"rectangles\"} name={\"method\"} value=\"rectangles\" defaultChecked\n                               onChange={handleChange}/>\n                        <label htmlFor=\"trapezes\">trapèzes</label>\n                        <input type={\"radio\"} className={\"trapezes\"} name={\"method\"} value=\"trapezes\"\n                               onChange={handleChange}/>\n                        <label htmlFor=\"simpson\">simpson</label>\n                        <input type={\"radio\"} className={\"simpson\"} name={\"method\"} value=\"simpson\"\n                               onChange={handleChange}/>\n                    </div>\n                    <input type=\"submit\" className={\"lunchButtonProba\"} value=\"Lancer le calcul\"/>\n                </form>\n\n                <div className={\"dialogBoxProba\"}>\n                    <p className={\"errorProba\"}>{error}</p>\n                    <p className={\"calcResultProba\"}>{result}</p>\n                </div>\n            </div>);\n    }\n    else {\n        return (navigate(\"/notAllowed\"));\n    }\n}\n\nexport default ModuleProba;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}