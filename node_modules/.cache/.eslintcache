[{"/root/sae3-01-dev-d-apli/src/index.js":"1","/root/sae3-01-dev-d-apli/src/reportWebVitals.js":"2","/root/sae3-01-dev-d-apli/src/components/App.js":"3","/root/sae3-01-dev-d-apli/src/components/Layout.js":"4","/root/sae3-01-dev-d-apli/src/pages/Home.js":"5","/root/sae3-01-dev-d-apli/src/pages/Login.js":"6","/root/sae3-01-dev-d-apli/src/pages/Sign.js":"7","/root/sae3-01-dev-d-apli/src/pages/domains.js":"8","/root/sae3-01-dev-d-apli/src/pages/NotAllowed.js":"9","/root/sae3-01-dev-d-apli/src/pages/Profile.js":"10","/root/sae3-01-dev-d-apli/src/pages/ChangePass.js":"11","/root/sae3-01-dev-d-apli/src/pages/Stats.js":"12","/root/sae3-01-dev-d-apli/src/pages/domains/modules/modules.js":"13","/root/sae3-01-dev-d-apli/src/pages/domains/modules/Securite/module_crypto.js":"14","/root/sae3-01-dev-d-apli/src/pages/domains/modules/Maths/module_proba.js":"15","/root/sae3-01-dev-d-apli/src/components/Navigation.js":"16"},{"size":553,"mtime":1663833191888,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1663833191884,"results":"19","hashOfConfig":"18"},{"size":3688,"mtime":1663833191316,"results":"20","hashOfConfig":"18"},{"size":415,"mtime":1663833191312,"results":"21","hashOfConfig":"18"},{"size":1227,"mtime":1676652812768,"results":"22","hashOfConfig":"18"},{"size":3171,"mtime":1663833191320,"results":"23","hashOfConfig":"18"},{"size":7861,"mtime":1663833191332,"results":"24","hashOfConfig":"18"},{"size":2122,"mtime":1663833191328,"results":"25","hashOfConfig":"18"},{"size":664,"mtime":1663833191328,"results":"26","hashOfConfig":"18"},{"size":4858,"mtime":1676656291944,"results":"27","hashOfConfig":"18"},{"size":365,"mtime":1663833191320,"results":"28","hashOfConfig":"18"},{"size":4193,"mtime":1676883697297,"results":"29","hashOfConfig":"18"},{"size":3449,"mtime":1663833191344,"results":"30","hashOfConfig":"18"},{"size":5952,"mtime":1663833191340,"results":"31","hashOfConfig":"18"},{"size":7155,"mtime":1663833191340,"results":"32","hashOfConfig":"18"},{"size":2434,"mtime":1676658299112,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jxzff3",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},"/root/sae3-01-dev-d-apli/src/index.js",[],[],"/root/sae3-01-dev-d-apli/src/reportWebVitals.js",[],[],"/root/sae3-01-dev-d-apli/src/components/App.js",["90","91"],[],"import '../styles/App.css';\nimport Layout from \"./Layout\";\nimport Home from \"../pages/Home\";\nimport {Routes, Route, Router, HashRouter} from \"react-router-dom\";\nimport React, {useState, useEffect} from \"react\";\nimport Login from \"../pages/Login\";\nimport Sign from \"../pages/Sign\";\nimport {useCookies} from \"react-cookie\";\nimport Domains from \"../pages/domains\";\nimport Modules from \"../pages/domains/modules/modules\";\nimport ModuleCrypto from \"../pages/domains/modules/Securite/module_crypto\";\nimport ModuleProba from \"../pages/domains/modules/Maths/module_proba\";\nimport NotAllowed from \"../pages/NotAllowed\";\nimport Profile from \"../pages/Profile\";\nimport ChangePass from \"../pages/ChangePass\";\nimport Stats from \"../pages/Stats\";\nimport {redirect} from \"react-router\";\n\n\nfunction App() {\n    const [logged, setLogged] = useState(false);\n    const [unconnected, setUnconnected] = useState(false);\n    const [user, setUser] = useState(\"\");\n    // eslint-disable-next-line no-unused-vars\n    const [rank, setRank] = useState(\"\");\n    const [cookies, setCookie, removeCookie] = useCookies(['log']);\n    const setLogCookie = (value, pUser, pRank) => {\n        setCookie('log', value, { path: '/' });\n        setCookie('logUser', pUser, { path: '/' });\n        setCookie('logRank', pRank, { path: '/' });\n    }\n\n\n\n    const getLogCookies = () => {\n        if(cookies.log){\n            setLogged(cookies.log);\n\n            if(cookies.logUser !== undefined){\n                setUser(cookies.logUser);\n            }\n\n            if(cookies.logRank !== undefined){\n                setRank(cookies.logRank);\n            }\n        }\n    }\n\n    const removeLogCookies = () => {\n        removeCookie('log', );\n        removeCookie('logUser' );\n        removeCookie('logRank');\n        setLogged(false);\n    }\n\n    if (logged && cookies.log !== 'true'){\n        setLogCookie(true, user, rank);\n    }\n\n    if(unconnected){\n        removeLogCookies();\n        setUnconnected(false);\n    }\n\n    useEffect(() => {\n        if (cookies.log === 'true'){\n            setLogged(true);\n        }\n\n        if (logged && cookies.log === 'true'){\n            getLogCookies();\n        }\n    })\n\n\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <Routes history={Router.history}>\n                    <Route path=\"/\" element={<Layout logged={logged} setLogged={setLogged} unconnected={unconnected} setUnconnected={setUnconnected} rank={rank}/>}>\n                        <Route index element={<Home logged={logged} user={user}/>} />\n                        <Route path=\"connexion\" element={<Login logged={logged} setLogged={setLogged} user= {user} setUser={setUser} rank={rank} setRank={setRank} getLogCookies={getLogCookies}/>} />\n                        <Route path=\"inscription\" element={<Sign />} />\n                        <Route path=\"domains\" element={<Domains logged={logged}/>} />\n                        <Route path=\"domains/modules/\" element={<Modules logged={logged} user={user} />} />\n                        <Route path=\"domains/modules/module_proba\" element={<ModuleProba logged={logged} />} />\n                        <Route path=\"domains/modules/module_crypto\" element={<ModuleCrypto  logged={logged} />} />\n                        <Route path=\"notAllowed\" element={<NotAllowed />} />\n                        <Route path=\"profile\" element={<Profile rank={rank} user={user} logged={logged}/> }/>\n                        <Route path=\"changepass\" element={<ChangePass /> }/>\n                        <Route path=\"stats\" element={<Stats />} />\n                    </Route>\n                </Routes>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","/root/sae3-01-dev-d-apli/src/components/Layout.js",[],[],"/root/sae3-01-dev-d-apli/src/pages/Home.js",[],[],"/root/sae3-01-dev-d-apli/src/pages/Login.js",["92","93","94"],["95"],"import React, {useState} from 'react';\nimport '../styles/Login_signin.css';\nimport human from '../assets/human.svg';\nimport lock from '../assets/lock.svg';\nimport {Link, useNavigate} from \"react-router-dom\";\nimport $ from \"jquery\";\nimport md5 from \"md5\";\nimport {redirect} from \"react-router\";\n\nfunction Login({logged, setLogged, user, setUser, setRank, rank, getLogCookies}) {\n\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [result , setResult] = useState(\"\");\n\n    const updateLogged = (pValue) => {\n        setLogged(pValue);\n    };\n\n    const handleSumbit = (e) => {\n        e.preventDefault();\n        const form = $(e.target);\n\n        $.ajax({\n            type: \"POST\",\n            url: form.attr(\"action\"),\n            data: form.serialize(),\n            success(data) {\n                setResult(data);\n            },\n        });\n    };\n\n    const handleChangeLogin = (e) => {\n        setLogin(e.target.value);\n    };\n\n    const handleChangePass = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const results = () =>{\n        // eslint-disable-next-line\n        const navigate = useNavigate();\n        let lStrRank = \"\";\n        let lResult = 0;\n\n        for (let i = 0; i < result.length; i++) {\n            if (result[i] == 1){\n                lResult = 1;\n            }else{\n                lStrRank += result[i];\n            }\n        }\n\n        if(lResult == 1){\n            updateLogged(true);\n            setUser(login);\n            setRank(md5(lStrRank));\n\n            navigate(\"/\");\n        }\n        else {\n            return (<p className={'errorLogInSignIn'}>{result}</p>);\n        }\n    }\n\n    return (\n        <div className=\"card\">\n            <h4 className=\"title\">S'identifier</h4>\n            <form\n                action=\"https://192.168.1.161:443/php/login.php\"\n                method=\"post\"\n                onSubmit={(event) => handleSumbit(event)}\n            >\n                <div className=\"field\">\n                <img src={human} alt=\"human\" className=\"input-icon\"></img>\n                <input autoComplete=\"off\" id=\"login\" placeholder=\"Adresse mail\" className=\"input-field\" name=\"login\"\n                       type=\"text\"\n                       value={login}\n                       onInput={(event) => handleChangeLogin(event)}\n                />\n                </div>\n                <div className=\"field\">\n                    <img src={lock} alt=\"lock\" className=\"input-icon\"></img>\n                    <input autoComplete=\"off\" id=\"logpass\" placeholder=\"Mot de passe\" className=\"input-field\" name=\"password\"\n                           type=\"password\"\n                           value={password}\n                           onInput={(event) => handleChangePass(event)}\n                    />\n                </div>\n                <button className=\"btn\" type=\"submit\">Se connecter</button>\n                <Link path=\"/inscription\" className=\"btn-link\">Mot de passe oublié ?</Link>\n            </form>\n            {results()}\n            <Link className=\"btn-link\" to=\"/inscription\">Pas encore de compte ?</Link>\n        </div>\n    );\n}\n\nexport default Login;\n","/root/sae3-01-dev-d-apli/src/pages/Sign.js",["96","97","98","99","100","101","102","103","104","105"],["106","107","108"],"import React, {useEffect, useState} from \"react\";\nimport \"../styles/Login_signin.css\";\nimport emailLogo from \"../assets/email.svg\";\nimport lock from \"../assets/lock.svg\";\nimport human from \"../assets/human.svg\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport $ from \"jquery\";\n\n\nfunction Sign() {\n    const [firstname, setFirstName] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [login, setLogin] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [confEmail, setConfEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confPassword, setConfPassword] = useState(\"\");\n    const [result, setResult] = useState(\"\");\n    const [check, setCheck] = useState(false);\n    const [value1Captcha, setValue1Captcha] = useState(\"\");\n    const [value2Captcha, setValue2Captcha] = useState(\"\");\n    const [resultCaptcha, setResultCaptcha] = useState(\"\");\n    const [captcha, setCaptcha] = useState(\"\");\n\n\n    var error = \"\";\n\n    const handleChangeFirstName = (e) => {\n        setFirstName(e.target.value);\n    };\n\n    const handleChangeName = (e) => {\n        setName(e.target.value);\n    };\n\n    const handleChangeLogin = (e) => {\n        setLogin(e.target.value);\n    };\n\n    const handleChangeEmail = (e) => {\n        setEmail(e.target.value);\n    }\n\n    const handleChangeConfEmail = (e) => {\n        setConfEmail(e.target.value);\n    }\n\n    const handleChangePass = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const handleChangeConfPass = (e) => {\n        setConfPassword(e.target.value);\n    }\n\n    const changeCheck = () => {\n        if (check) {\n            setCheck(false);\n        } else {\n            setCheck(true);\n        }\n    }\n\n    const handleChangeCaptcha = (e) => {\n        setCaptcha(e.target.value);\n    }\n\n    const handleSumbit = (e) => {\n        e.preventDefault();\n        const form = $(e.target);\n\n            // eslint-disable-next-line\n            const emailValidate = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n            if (emailValidate.test(email)) {\n                if (confPassword != password || password == \"\" && confPassword == \"\") {\n                    error = \"Les mots de passe ne correspondent pas !\";\n                    setResult(error);\n                    return;\n                } else {\n                    if (!check) {\n                        error = \"Vous n'avez pas accepté les conditions générales d'utilisation\";\n                        setResult(error);\n                        return;\n                    } else {\n                        if (captcha != resultCaptcha) {\n                            error = \"Le captcha est incorrect\";\n                            setResult(error);\n                            return;\n                        } else {\n                            $.ajax({\n                                type: \"POST\",\n                                url: form.attr(\"action\"),\n                                data: form.serialize(),\n                                success(data) {\n                                    setResult(data);\n                                },\n                            });\n                        }\n\n                    }\n                }\n            }else {\n                error = \"L'adresse mail n'est pas valide\";\n                setResult(error);\n                return;\n\n            }\n\n        }\n\n    // eslint-disable-next-line\n    const Results = () =>{\n        const navigate = useNavigate();\n\n        // eslint-disable-next-line\n        if (result == 1) {\n            alert(\"Votre compte a bien été créé ! Connecter vous pour accéder à votre profil\");\n            navigate(\"/connexion\");\n        } else {\n            return (<p className={'errorLogInSignIn'}>{result}</p>);\n        }\n    }\n\n    useEffect(\n        () => {\n            const firstValue = Math.floor(Math.random() * 30);\n            const secondValue = Math.floor(Math.random() * 30);\n            setValue1Captcha(firstValue);\n            setValue2Captcha(secondValue);\n            setResultCaptcha(firstValue + secondValue);\n        }, []);\n\n\n    return (\n        <div className=\"signIn\">\n            <div className=\"card\">\n                <h4 className=\"title\">Inscription</h4>\n                <form\n                    action=\"https://192.168.1.161:443/php/signin.php\"\n                    method=\"post\"\n                    onSubmit={(event) => handleSumbit(event)}\n                >\n                    <div className=\"field\">\n                        <img src={human} alt=\"human\" className=\"input-icon\"></img>\n                        <input autoComplete=\"off\" id=\"firstname\" placeholder=\"Prénom\" className=\"input-field\"\n                               name=\"firstname\"\n                               type=\"text\"\n                               value={firstname}\n                               onInput={(event) => handleChangeFirstName(event)}\n                        />\n                    </div>\n                    <div className=\"field\">\n                <img src={human} alt=\"human\" className=\"input-icon\"></img>\n                <input autoComplete=\"off\" id=\"name\" placeholder=\"Nom\" className=\"input-field\" name=\"lastname\"\n                       type=\"text\"\n                       value={name}\n                       onInput={(event) => handleChangeName(event)}\n                />\n            </div>\n            \n\t    <div className=\"field\">\n                <img src={emailLogo} alt=\"email\" className=\"input-icon\"></img>\n                <input autoComplete=\"off\" id=\"logemail1\" placeholder=\"Email\" className=\"input-field\" name=\"email\"\n                       type=\"email\"\n                       value={email}\n                       onInput={(event) => handleChangeEmail(event)}\n                />\n            </div>\n            \n                       \n            <div className=\"field\">\n                <img src={lock} alt=\"lock\" className=\"input-icon\"></img>\n                <input autoComplete=\"off\" id=\"logpass\" placeholder=\"Mot de passe\" className=\"input-field\" name=\"password\"\n                       type=\"password\"\n                       value={password}\n                       onInput={(event) => handleChangePass(event)}\n                />\n            </div>\n                    <div className=\"field\">\n                        <img src={lock} alt=\"lock\" className=\"input-icon\"></img>\n                        <input autoComplete=\"off\" id=\"logpassconf\" placeholder=\"Confirmation de mot de passe\"\n                               className=\"input-field\" name=\"password\"\n                               type=\"password\"\n                               value={confPassword}\n                               onInput={(event) => handleChangeConfPass(event)}\n                        />\n                    </div>\n                    <div className=\"useTerm\">\n                        <label htmlFor=\"check\"><Link className=\"linkUse\">j'ai lu et accepte les conditions générales\n                            d'utilisation</Link></label>\n                        <input autoComplete=\"off\" id=\"check\" name=\"check\" type=\"checkbox\"\n                               onClick={(event) => changeCheck(event)}/>\n                    </div>\n                    <div className=\"captcha\">\n                        <label htmlFor=\"captcha\">{`Que font ${value1Captcha} + ${value2Captcha} ?`}</label>\n                        <input\n                            type=\"number\"\n                            id=\"captcha\"\n                            onInput={(event) => handleChangeCaptcha(event)}\n                        />\n                    </div>\n                    <button className=\"btn\" type=\"submit\">S'inscrire</button>\n                </form>\n            {Results()}\n        <Link className=\"link_signIn\" to=\"/connexion\">Vous avez déjà un compte ?</Link>\n    </div>\n    </div>);\n}\n\nexport  default Sign;\n","/root/sae3-01-dev-d-apli/src/pages/domains.js",["109","110"],[],"import React, {useState, useEffect} from \"react\";\nimport '../styles/domains.css';\nimport axios from \"axios\";\nimport {createSearchParams, useNavigate} from \"react-router-dom\";\nimport domain from \"../assets/domain.png\";\nimport $ from \"jquery\";\n\nfunction Domains({logged}) {\n    const [data, setData] = useState([]);\n\n    //useffect is used to the json parsed data from the middleware Node.js server\n        $.ajax({\n\t    type: \"GET\",\n\t    url: 'https://192.168.1.161:3001/domains',\n\t    success(data){\n\t\tsetData(data);\n\t    }\n\t});\n\n    const notAllowed = () => {\n        return navigate(\"/notAllowed\");\n    }\n\n    const navigate = useNavigate();\n\n    if (logged) {\n        if (data.domains !== undefined) {\n            let divDomains = [];\n            for (let i = 0; i < data.domains.length; i++) {\n\n                const goToModulesDomain = (domain) => {\n                    navigate({\n                        pathname: \"/domains/modules\",\n                        search: createSearchParams({\n                            domain: data.domains[i].name\n                        }).toString()\n                    })\n                }\n\n                divDomains.push(\n                    <div className={\"domain\"} onClick={goToModulesDomain} key={i}>\n                        <div className={\"nameD\"} style={{backgroundImage: `url(${domain})`}}>\n                            <p className={\"nameD\"}>{data.domains[i].name}</p>\n                        </div>\n                        <div className={\"descriptionD\"}>\n                            <p className={\"descriptionD\"}>{data.domains[i].description}</p>\n                        </div>\n                    </div>)\n            }\n            return (\n                <div className=\"domainsDiv\">\n                    <h1 className={\"domainText\"}>Voici la liste des domaines existants:</h1>\n                    <div className=\"domains\">\n                        {divDomains}\n                    </div>\n                </div>\n            );\n        } else return <p className={\"loading\"}>Loading...</p>\n    } else {\n        return <>{notAllowed()}</>;\n    }\n}\n\nexport default Domains;\n","/root/sae3-01-dev-d-apli/src/pages/NotAllowed.js",[],[],"/root/sae3-01-dev-d-apli/src/pages/Profile.js",["111","112","113"],[],"import React, {useState} from \"react\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport '../styles/Profile.css';\nimport $ from \"jquery\";\n\n\nfunction Profile({rank, user, logged}) {\n    const navigate = useNavigate();\n    const [resultAdmin, setResultAdmin] = useState(\"\");\n    const [resultUser, setResultUser] = useState(\"\");\n\n    const getProfile = () => {\n        $.ajax({\n            type: \"POST\",\n            url: \"https://192.168.1.161:443/php/user.php\",\n            data: {login: user},\n            success(data) {\n                setResultUser(data);\n            },\n        });\n\n        const lArrayResult = resultUser.split(\";\");\n        const lArrayFirtCol = ['Nom :', 'Prénom :', 'Email :'];\n        let lArrayProfil = [];\n        let lRetrun = [];\n        lArrayProfil = lArrayResult[0].split(\" \");\n\n        let lCurrLine = [];\n        for (let i = 0; i < lArrayProfil.length; i++) {\n            lCurrLine.push(<tr key={i}>\n                <td key={i^2} className={\"UserTitle\"}>{lArrayFirtCol[i]}</td>\n                <td key={i^3}>‎ ‎ ‎</td>\n                <td key={i^4}>{lArrayProfil[i]}</td>\n            </tr>);\n        }\n\n        return lCurrLine;\n    }\n\n    const getUsers = () => {\n        $.ajax({\n            type: \"POST\",\n            url: \"https://192.168.1.161:443/php/admin.php\",\n            success(data) {\n                setResultAdmin(data);\n            },\n        });\n\n        const lArrayResult = resultAdmin.split(\";;\");\n        let lArrayUsers = [];\n        let lRetrun = [];\n\n\n        for (let i = 0; i < lArrayResult.length; i++) {\n            lArrayUsers.push(lArrayResult[i].split(\";\"));\n        }\n\n        lArrayUsers.splice(-1, 1);\n\n        $('button').click(function () {\n            var x = $(this).attr('id');\n            const lArrayResult = resultAdmin.split(\";;\");\n            let lArrayUsers = [];\n\n            for (let i = 0; i < lArrayResult.length; i++) {\n                lArrayUsers.push(lArrayResult[i].split(\";\"));\n            }\n\n            lArrayUsers.splice(-1, 1);\n            console.log(lArrayUsers[x][0]);\n            $.ajax({\n                type: \"POST\",\n                url: \"https://192.168.1.161:443/php/delUser.php\",\n                data: {login: lArrayUsers[x][0]},\n                success(data) {\n                    console.log(data);\n                }\n            });\n\n            $(this).parent().parent().remove();\n        });\n\n        for (let i = 0; i < lArrayUsers.length; i++) {\n            let lCurrLine = [];\n            if (lArrayUsers[i][0] !== \"gestion\") {\n                for (let j = 0; j < lArrayUsers[i].length; j++) {\n                    if (j % 4 === 3) { //voir peut-être pour mettre 4 à la place de 3\n                        lCurrLine.push(<td id='col' className={`coll_${j}`} key={j^2}>{lArrayUsers[i][j]}</td>, <td\n                            className={`coll_${j + 1}`} key={(j+i)}>\n                            <button id={i}>supprimer</button>\n                        </td>);\n                    } else {\n                        lCurrLine.push(<td id='col' className={`coll_${j}`} key={j^2}>{lArrayUsers[i][j]}</td>);\n                    }\n                }\n                lRetrun.push(\n                    <tr key={i^2} className={`row_${i}`}>{lCurrLine}</tr>\n                );\n            }\n        }\n        return lRetrun;\n    };\n\n    if (logged) {\n        if (rank == \"c69f204a43c20dae05b94f585b6a78cc\") {\n            return (\n                <div className={\"userProfileNormal\"}>\n                    <h1 className={\"titleProfile\"}>Profile</h1>\n                    <table>\n                        {getProfile()}\n                        <tr>\n                            <td className={\"UserTitle\"}>Mot de passe :</td>\n                            <td>‎ ‎ ‎</td>\n                            <td className={\"UserPasswProfileName\"}><Link to={\"/changePass\"}>Change Password</Link>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            );\n        } else if (rank == \"7a54f94c5e960104822fcbd38c95cd43\") {\n            // Admin profile\n            return (<div className={\"userProfileAdmin\"}>\n                <h1 className={\"titleProfile\"}>Liste des utilisateurs :</h1>\n                <table>\n                    <thead>\n                    <tr>\n                        <td className={\"coll_1\"}>Nom</td>\n                        <td className={\"coll_2\"}>Prénom</td>\n                        <td className={\"coll_3\"}>Email</td>\n                        <td className={\"coll_4\"}>Action</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {getUsers()}\n                    </tbody>\n                </table>\n            </div>);\n        }\n    } else {\n        navigate(\"/notAllowed\");\n    }\n}\n\nexport default Profile;\n","/root/sae3-01-dev-d-apli/src/pages/ChangePass.js",[],[],"/root/sae3-01-dev-d-apli/src/pages/Stats.js",["114","115","116","117","118"],[],"/root/sae3-01-dev-d-apli/src/pages/domains/modules/modules.js",["119"],[],"import React, {useState, useEffect} from \"react\";\nimport '../../../styles/modules.css';\nimport axios from \"axios\";\nimport {useSearchParams, Link, useNavigate, createBrowserRouter} from \"react-router-dom\";\nimport module from \"../../../assets/module.png\";\nimport $ from \"jquery\";\n\n\nfunction Modules({logged, user}) {\n    const [dataMod, setDataMod] = useState([]);\n    const navigate = useNavigate();\n    const [searchParms] = useSearchParams();\n\n    useEffect(() => {\n        axios\n            .get(\"https://192.168.1.161:3001/domains/modules\")\n            .then(response => {\n                setDataMod(response.data);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    if (logged) {\n        if (dataMod.modules !== undefined) {\n            const domainType = searchParms.get(\"domain\")\n\n            const domainList = []\n            function delayAndGo(e, path, name) {\n                e.preventDefault();\n\n                $.ajax({\n\t\t\turl: \"https://192.168.1.161:443/php/logModule.php\",\n                    type: \"POST\",\n                    data: {\n                        user: user,\n                        module: name,\n                    },\n                });\n\n                setTimeout(() => navigate(path), 20);\n            }\n\n\n\n            for (let i = 0; i < dataMod.modules.length; i++) {\n                if (!domainList.includes(dataMod.modules[i].domain_name)) {\n                    domainList.push(dataMod.modules[i].domain_name)\n                }\n            }\n\n            if (domainList.includes(domainType)) {\n                let divModule = [];\n\n                for (let i = 0; i < dataMod.modules.length; i++) {\n\n                    if (dataMod.modules[i].domain_name === domainType) {\n                        divModule.push(\n                            <Link to={'#'} key={i} id={i} onClick={(e) => delayAndGo(e, `/domains/modules/${dataMod.modules[i].module_name}`, dataMod.modules[i].name)}>\n                                <div className={\"module\"}>\n                                    <div className={\"nameM\"} style={{backgroundImage: `url(${module})`}}>\n                                        <p className={\"nameM\"}>{dataMod.modules[i].name}</p>\n                                    </div>\n                                    <div className={\"descriptionM\"}>\n                                        <p className={\"descriptionMP\"}>{dataMod.modules[i].description}</p>\n                                        <p className={\"credits\"}>credits: {dataMod.modules[i].credits}</p>\n                                    </div>\n                                </div>\n                            </Link>)\n                    }\n                }\n                return (\n                    <div className=\"modulesDiv\">\n                        <h1 className={\"ModuleText\"}>Voici la liste des modules existants pour le\n                            domaine {domainType}:</h1>\n                        <div className=\"modules\" id='divModules'>\n                            {divModule}\n                        </div>\n                    </div>\n                );\n            } else return <p className={\"loading\"}>ID de domaine \"{domainType}\" invalide, pour retourner en arrière\n                cliquez <Link to=\"/domains\">ici</Link></p>\n        } else return <p className={\"loading\"}>Loading...</p>\n    } else{\n        navigate(\"/notAllowed\");\n    }\n}\n\nexport default Modules;\n","/root/sae3-01-dev-d-apli/src/pages/domains/modules/Securite/module_crypto.js",["120","121","122","123"],[],"import React, {useState} from 'react';\nimport '../../../../styles/moduleCrypto.css';\nimport {useNavigate} from \"react-router-dom\";\n\nfunction ModuleCrypto({logged}) {\n    let [result, setResult] = useState(``);\n    let [error, setError] = useState(\"\");\n\n    const [formData, setFormData] = useState({\n        key: '',\n        textCrypto: '',\n        t: '',\n\tmethod: 'encrypt'\n    });\n\n    function checkHexa(key,str){\n        var regex = /[0-9A-Fa-f]{6}/g;\n        if (str.match(regex)){\n            return dechiffrementRC4(key,str)\n        }\n        else {\n            return rc4(key,str)\n        }\n    }\n\n    function rc4(key, str) {\n        /**\n         * @returns texte chiffré en hexadécimal\n         * @param key : String\n         * @param str : String\n         * @type {RegExp}\n         */\n\n\n        let ciphertext = new Uint8Array(str.length);\n\n        // Algorithme PRGA générant la suite chiffrante de RC4\n        let S = new Uint8Array(256);\n        for (let i = 0; i < 256; i++) {\n            S[i] = i;\n        }\n        let j = 0;\n        for (let i = 0; i < 256; i++) {\n            j = (j + S[i] + key.charCodeAt(i % key.length)) % 256; // Tableau construit à partir de la clé\n            [S[i], S[j]] = [S[j], S[i]];\n        }\n\n        // Algorithme KSA pour la génération de la permutation\n        let i = 0;\n        j = 0;\n        for (let n = 0; n < str.length; n++) {\n            i = (i + 1) % 256;\n            j = (j + S[i]) % 256;\n            [S[i], S[j]] = [S[j], S[i]];\n            let z = S[(S[i] + S[j]) % 256];\n\n            // XOR entre la clé et le texte pour produire le chiffrement\n            ciphertext[n] = str.charCodeAt(n) ^ z;\n        }\n\n        str = \"\"\n        for (let i = 0 ; i < ciphertext.length ; i++){\n            if (ciphertext[i] <= 16){\n                str += \"0\" // la conversion en hexadécimal ne renvoie pas un 0, nécessaire au bon chiffrement\n            }\n            str += ciphertext[i].toString(16) // conversion décimal/hexadécimal\n        }\n\n        return str\n\n\n    }\n\n    function dechiffrementRC4(key, ciphertext) {\n        // Convertit l'hexadécimal en bytes pour le déchiffrement\n        let bytes = [];\n        for (var i = 0; i < ciphertext.length; i += 2) {\n            bytes.push(parseInt(ciphertext.substr(i, 2), 16));\n        }\n        var ciphertext = String.fromCharCode.apply(null, bytes);\n\n        // Algorithme PRGA générant la suite déchiffrante de RC4\n        let S = new Array(256);\n        for (let i = 0; i < 256; i++) {\n            S[i] = i;\n        }\n\n        let j = 0;\n        for (let i = 0; i < 256; i++) {\n            j = (j + S[i] + key.charCodeAt(i % key.length)) % 256;\n            [S[i], S[j]] = [S[j], S[i]];\n        }\n\n        // Algorithme KSA pour la génération de la permutation\n        var i = 0;\n        j = 0;\n        let plaintext = \"\";\n        for (let n = 0; n < ciphertext.length; n++) {\n            i = (i + 1) % 256;\n            j = (j + S[i]) % 256;\n            [S[i], S[j]] = [S[j], S[i]];\n            let z = S[(S[i] + S[j]) % 256];\n            plaintext += String.fromCharCode(ciphertext.charCodeAt(n) ^ z);\n        }\n        return plaintext;\n    }\n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        setFormData({...formData, [name]: value});\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setResult(``)\n        setError(\"\")\n        if (formData.key !== \"\") {\n            if (formData.textCrypto !== \"\") {\n\t\t    if (formData.method == \"encrypt\"){\n\t\t    \tsetResult(rc4(formData.key, formData.textCrypto))\n\t\t    }\n\t\t    else {\n\t\t\tsetResult(dechiffrementRC4(formData.key, formData.textCrypto))\n\t\t    }\n            } else {\n                setError(\"Erreur le champ Texte n'a pas de valeur\")\n            }\n        } else {\n            setError(\"Erreur le champ Clé n'a pas de valeur\")\n        }\n    }\n\n    const navigate = useNavigate();\n\n\n    if (logged) {\n        return (\n            <div className=\"ModuleCrypto\">\n                <h1 className={\"titleCrypto\"}>Module de cryptographie</h1>\n                <form onSubmit={handleSubmit}>\n                    <div className={\"inputsCrypto\"}>\n                        <p className={\"inputTextCrypto\"}>Entrez les valeurs requise pour chiffrer le texte en\n                            hexadécimal: </p>\n                        <label htmlFor={\"key\"}>Clé: </label>\n                        <input type={\"text\"} className={\"key\"} name={\"key\"} onChange={handleChange}/>\n                        <label htmlFor={\"textCrypto\"}>Texte: </label>\n                        <input type={\"text\"} className={\"textCrypto\"} name={\"textCrypto\"} onChange={handleChange}/>\n                    </div>\n\t\t    <div className={\"radioInputsCrypto\"}>\n                        <p className={\"EncryptOrDecrypt\"}>Chiffrage/déchiffrage :</p>\n                        <label htmlFor=\"encrypt\">Chiffrage</label>\n                        <input type={\"radio\"} className={\"encrypt\"} name={\"method\"} value=\"encrypt\" defaultChecked\n                               onChange={handleChange}/>\n                        <label htmlFor=\"decrypt\">Déchiffrage</label>\n                        <input type={\"radio\"} className={\"decrypt\"} name={\"method\"} value=\"decrypt\"\n                               onChange={handleChange}/>\n                    </div>\n                    <input type=\"submit\" className={\"lunchButtonCrypto\"} value=\"Lancer le chiffrement\"/>\n                </form>\n\n                <div className={\"dialogBoxCrypto\"}>\n                    <p className={\"errorCrypto\"}>{error}</p>\n                    <label htmlFor={\"result\"}>Résultat: </label>\n                    <input type={\"text\"} name={\"result\"} onInput={false} className={\"calcResultCrypto\"}\n                           value={result}></input>\n                </div>\n\n            </div>);\n    } else {\n        return navigate(\"/notAllowed\");\n    }\n}\n\nexport default ModuleCrypto;\n","/root/sae3-01-dev-d-apli/src/pages/domains/modules/Maths/module_proba.js",[],[],"/root/sae3-01-dev-d-apli/src/components/Navigation.js",["124","125"],[],"import logo from '../assets/logo.png';\nimport '../styles/Navigation.css';\nimport {Link, useNavigate} from \"react-router-dom\";\nimport React from \"react\";\nimport $ from \"jquery\";\n\n/**\n * Retourne un Élément React contenant la div de navigation du site\n * @returns {JSX.Element} retourne <Navigation />\n */\nfunction Navigation({logged, setLogged, unconnected, setUnconnected, rank}) {\n    const navigate = useNavigate();\n\n    const delayAndGo = (e, path) => {\n        e.preventDefault();\n        setLogged(!logged);\n        setUnconnected(true);\n        setTimeout(() => navigate(path), 100);\n    }\n\n    const statPage = () => {\n        if (rank == \"7a54f94c5e960104822fcbd38c95cd43\") {\n            return <Link to=\"/stats\">Statistiques <li></li></Link>\n        }\n    }\n\n\n    if (logged) {\n        return (<div className=\"divNav\">\n            <nav className=\"navbar\">\n                <Link to=\"/\"><img src={logo} className=\"logo\" alt=\"logo\"/></Link>\n                <div className=\"rightNav\">\n                    <Link className=\"link\" to=\"/domains\">Domaine</Link>\n                </div>\n                <div className=\"menu\">\n                    <nav role=\"navigation\">\n                        <div id=\"menuToggle\">\n                            <input type=\"checkbox\"/>\n\n                            <span></span>\n                            <span></span>\n                            <span></span>\n\n                            <ul id=\"menu\">\n                                <Link to=\"/profile\">Mon Profil\n                                    <li></li>\n                                </Link>\n                                {statPage()}\n                                <Link to=\"/\" onClick={(e) => delayAndGo(e, `/`)}>Deconnexion\n                                    <li></li>\n                                </Link>\n\n                            </ul>\n                        </div>\n                    </nav>\n                </div>\n            </nav>\n        </div>);\n    } else {\n        return (<div className=\"divNav\">\n            <nav className=\"navbar\">\n                <Link to=\"/\"><img src={logo} className=\"logo\" alt=\"logo\"/></Link>\n                <div className=\"rightNav\">\n                    <Link className=\"link\" to=\"/connexion\">S'identifier</Link>\n                    <Link className=\"link\" to=\"/inscription\">S'inscrire</Link>\n                </div>\n            </nav>\n        </div>);\n    }\n}\n\nexport default Navigation;\n",{"ruleId":"126","severity":1,"message":"127","line":17,"column":9,"nodeType":"128","messageId":"129","endLine":17,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":65,"column":5,"nodeType":"128","endLine":65,"endColumn":14,"suggestions":"132"},{"ruleId":"126","severity":1,"message":"127","line":8,"column":9,"nodeType":"128","messageId":"129","endLine":8,"endColumn":17},{"ruleId":"133","severity":1,"message":"134","line":49,"column":27,"nodeType":"135","messageId":"136","endLine":49,"endColumn":29},{"ruleId":"133","severity":1,"message":"134","line":56,"column":20,"nodeType":"135","messageId":"136","endLine":56,"endColumn":22},{"ruleId":"137","severity":2,"message":"138","line":44,"column":26,"nodeType":"128","endLine":44,"endColumn":37,"suppressions":"139"},{"ruleId":"126","severity":1,"message":"140","line":13,"column":12,"nodeType":"128","messageId":"129","endLine":13,"endColumn":17},{"ruleId":"126","severity":1,"message":"141","line":15,"column":12,"nodeType":"128","messageId":"129","endLine":15,"endColumn":21},{"ruleId":"126","severity":1,"message":"142","line":36,"column":11,"nodeType":"128","messageId":"129","endLine":36,"endColumn":28},{"ruleId":"126","severity":1,"message":"143","line":44,"column":11,"nodeType":"128","messageId":"129","endLine":44,"endColumn":32},{"ruleId":"133","severity":1,"message":"144","line":76,"column":34,"nodeType":"135","messageId":"136","endLine":76,"endColumn":36},{"ruleId":"145","severity":1,"message":"146","line":76,"column":46,"nodeType":"147","messageId":"148","endLine":76,"endColumn":48},{"ruleId":"133","severity":1,"message":"134","line":76,"column":58,"nodeType":"135","messageId":"136","endLine":76,"endColumn":60},{"ruleId":"145","severity":1,"message":"146","line":76,"column":64,"nodeType":"147","messageId":"148","endLine":76,"endColumn":66},{"ruleId":"133","severity":1,"message":"134","line":76,"column":80,"nodeType":"135","messageId":"136","endLine":76,"endColumn":82},{"ruleId":"133","severity":1,"message":"144","line":86,"column":37,"nodeType":"135","messageId":"136","endLine":86,"endColumn":39},{"ruleId":"149","severity":1,"message":"150","line":73,"column":42,"nodeType":"151","messageId":"152","endLine":73,"endColumn":43,"suggestions":"153","suppressions":"154"},{"ruleId":"149","severity":1,"message":"150","line":73,"column":58,"nodeType":"151","messageId":"152","endLine":73,"endColumn":59,"suggestions":"155","suppressions":"156"},{"ruleId":"133","severity":1,"message":"134","line":117,"column":20,"nodeType":"135","messageId":"136","endLine":117,"endColumn":22,"suppressions":"157"},{"ruleId":"126","severity":1,"message":"158","line":1,"column":26,"nodeType":"128","messageId":"129","endLine":1,"endColumn":35},{"ruleId":"126","severity":1,"message":"159","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":13},{"ruleId":"126","severity":1,"message":"160","line":25,"column":13,"nodeType":"128","messageId":"129","endLine":25,"endColumn":20},{"ruleId":"133","severity":1,"message":"134","line":105,"column":18,"nodeType":"135","messageId":"136","endLine":105,"endColumn":20},{"ruleId":"133","severity":1,"message":"134","line":120,"column":25,"nodeType":"135","messageId":"136","endLine":120,"endColumn":27},{"ruleId":"126","severity":1,"message":"161","line":4,"column":9,"nodeType":"128","messageId":"129","endLine":4,"endColumn":12},{"ruleId":"126","severity":1,"message":"162","line":13,"column":11,"nodeType":"128","messageId":"129","endLine":13,"endColumn":15},{"ruleId":"133","severity":1,"message":"144","line":37,"column":18,"nodeType":"135","messageId":"136","endLine":37,"endColumn":20},{"ruleId":"126","severity":1,"message":"163","line":66,"column":17,"nodeType":"128","messageId":"129","endLine":66,"endColumn":27},{"ruleId":"133","severity":1,"message":"144","line":98,"column":18,"nodeType":"135","messageId":"136","endLine":98,"endColumn":20},{"ruleId":"126","severity":1,"message":"164","line":4,"column":45,"nodeType":"128","messageId":"129","endLine":4,"endColumn":64},{"ruleId":"126","severity":1,"message":"165","line":16,"column":14,"nodeType":"128","messageId":"129","endLine":16,"endColumn":23},{"ruleId":"166","severity":1,"message":"167","line":80,"column":13,"nodeType":"128","messageId":"168","endLine":80,"endColumn":23},{"ruleId":"166","severity":1,"message":"169","line":95,"column":13,"nodeType":"128","messageId":"168","endLine":95,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":119,"column":27,"nodeType":"135","messageId":"136","endLine":119,"endColumn":29},{"ruleId":"126","severity":1,"message":"170","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":9},{"ruleId":"133","severity":1,"message":"134","line":22,"column":18,"nodeType":"135","messageId":"136","endLine":22,"endColumn":20},"no-unused-vars","'redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setLogged'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [cookies.log, logged, getLogCookies] as a second argument to the useEffect Hook.",["171"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/rules-of-hooks","React Hook \"useNavigate\" is called in function \"results\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".",["172"],"'login' is assigned a value but never used.","'confEmail' is assigned a value but never used.","'handleChangeLogin' is assigned a value but never used.","'handleChangeConfEmail' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["173","174"],["175"],["176","177"],["178"],["179"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'lRetrun' is assigned a value but never used.","'get' is defined but never used.","'data' is assigned a value but never used.","'lCollIndex' is assigned a value but never used.","'createBrowserRouter' is defined but never used.","'checkHexa' is defined but never used.","no-redeclare","'ciphertext' is already defined.","redeclared","'i' is already defined.","'$' is defined but never used.",{"desc":"180","fix":"181"},{"kind":"182","justification":"183"},{"messageId":"184","fix":"185","desc":"186"},{"messageId":"187","fix":"188","desc":"189"},{"kind":"182","justification":"183"},{"messageId":"184","fix":"190","desc":"186"},{"messageId":"187","fix":"191","desc":"189"},{"kind":"182","justification":"183"},{"kind":"182","justification":"183"},"Add dependencies array: [cookies.log, logged, getLogCookies]",{"range":"192","text":"193"},"directive","","removeEscape",{"range":"194","text":"183"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"195","text":"196"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"197","text":"183"},{"range":"198","text":"196"},[2166,2166],", [cookies.log, logged, getLogCookies]",[1989,1990],[1989,1989],"\\",[2005,2006],[2005,2005]]